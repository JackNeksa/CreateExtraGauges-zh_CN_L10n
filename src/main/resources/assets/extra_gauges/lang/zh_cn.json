{
    "itemGroup.extra_gauges": "Create: Extra Gauges",

    "item.extra_gauges.logic_gauge": "逻辑仪表",
    "item.extra_gauges.integer_gauge": "运算仪表",
    "item.extra_gauges.comparator_gauge": "比较仪表",
    "item.extra_gauges.counter_gauge": "计数仪表",
    "item.extra_gauges.passive_gauge": "被动仪表",
    "item.extra_gauges.string_gauge": "字符串仪表",
    "block.extra_gauges.integer_selector": "数值选择器",
    "block.extra_gauges.display_collector": "显示收集站",

    "extra_gauges.panel.panels_connected": "%s 现在连接到 %s",
    "extra_gauges.panel.custom_panel_on_restocker": "自定义仪表无法放置为补货模式",

    "create.logistics.logic_gate": "逻辑仪表",
    "logic_gauge.gate.or": "或门（输入有真输出真）",
    "logic_gauge.gate.and": "与门（输入全真输出真）",
    "logic_gauge.gate.nor": "或非门（输入全假输出真）",
    "logic_gauge.gate.nand": "与非门（输入有假输出真）",
    "logic_gauge.gate.xor": "异或门（输入有奇数个真输出真）",
    "logic_gauge.gate.xnor": "同或门（输入有偶数个真输出真）",

    "create.logistics.int_operation": "整数运算",
    "integer_gauge.mode.add": "加（对输入取和）",
    "integer_gauge.mode.subtract": "减（对输入取和再取反）",
    "integer_gauge.mode.multiply": "乘（对输入取积）",

    "create.logistics.comparator_value": "选择要比较的值",
    "comparator_gauge.mode.equals": "等于",
    "comparator_gauge.mode.different": "不等于",
    "comparator_gauge.mode.greater": "大于",
    "comparator_gauge.mode.greater_equals": "大于等于",
    "comparator_gauge.mode.less": "小于",
    "comparator_gauge.mode.less_equals": "小于等于",
    "create.logistics.comparator_gauge.title": "多个输入将会被求和",

    "create.logistics.counter_threshold": "选择计数目标",

    "create.display_collector.set": "已选择目标位置",
    "create.display_collector.success": "成功绑定到目标位置",

    "extra_gauges.ponder.logic_gauge.header": "Using Logic Gauges to transmit redstone signals",
    "extra_gauges.ponder.logic_gauge.text_1": "Logic Gauges can transmit redstone over several wall-attached objects",
    "extra_gauges.ponder.logic_gauge.text_2": "As inputs, we can use §9Levers§r, §9Analog §9Levers§r, §9Redstone §9links §9in §9receive §9mode§r and §6other §6gauges",
    "extra_gauges.ponder.logic_gauge.text_3": "As outputs, we can use §9Redstone §9links §9in §9transmitting §9mode§r and again, §6other §6gauges",
    "extra_gauges.ponder.logic_gauge.text_4": "§eNote: §rLevers and Analog levers §cdo §cnot §csend §can §cupdate §cinstantly§r, while redstone links do.",
    "extra_gauges.ponder.logic_gauge.text_5": "Easy enough? Let's see what happens when §6more §6inputs §6come §6in",
    "extra_gauges.ponder.logic_gauge.text_6": "The gauge, which by default is in §6OR§r mode, will activate when one OR the other lever is on",
    "extra_gauges.ponder.logic_gauge.text_7": "By holding right click, we can change it in other logic gates, for example the §6AND",
    "extra_gauges.ponder.logic_gauge.text_8": "The gauge, now in §6AND§r mode, will only activate when one AND the other lever are both on",
    "extra_gauges.ponder.logic_gauge.text_9": "Finally, with the use of a display link, we can show the world what value the logic gauge is currently on!",
    "extra_gauges.ponder.logic_gauge_storage.header": "Making Logic Gauges interact with Factory Gauges",
    "extra_gauges.ponder.logic_gauge_storage.text_1": "Logic gauges are obviously meant to interact with other gauges",
    "extra_gauges.ponder.logic_gauge_storage.text_2": "When the threshold of a factory gauge is reached (§9we §9have §964/64 §9diamonds§r)...",
    "extra_gauges.ponder.logic_gauge_storage.text_3": "...the logic gauge will receive a §credstone §cinput§r!",
    "extra_gauges.ponder.logic_gauge_storage.text_4": "On the other side, a Logic Gauge can point to a Factory gauge, §cblocking §cit §rfrom crafting!",

    "extra_gauges.ponder.integer_gauge.header": "Using Integer Gauges to transmit numbers",
    "extra_gauges.ponder.integer_gauge.text_1": "Integer gauges can transmit numbers over several wall-attached objects",
    "extra_gauges.ponder.integer_gauge.text_2": "§9Levers §rand §9Redstone Links §rwill emit a number of 15 if they are on...",
    "extra_gauges.ponder.integer_gauge.text_3": "... §9Analog §9levers §rwill emit a signal between 0 and 15 based on the state...",
    "extra_gauges.ponder.integer_gauge.text_4": "... and §9Integer §9selectors §rallow to input way more numbers.",
    "extra_gauges.ponder.integer_gauge.text_5": "§eNote: §rLevers and Analog levers §cdo §cnot §csend §can §cupdate §cinstantly§r, while redstone links and §9Integer §9selectors §rdo.",
    "extra_gauges.ponder.integer_gauge.text_6": "Let's see what happens if we connect two integer gauges...",
    "extra_gauges.ponder.integer_gauge.text_7": "The gauge, now having §92 §9inputs§r, will output the §6sum§r of these.",
    "extra_gauges.ponder.integer_gauge.text_8": "By holding right click, we can change the operation this gauge applies, using §6SUBTRACT §ror §6MULTIPLY§r.",
    "extra_gauges.ponder.integer_gauge_storage.header": "Making Integer Gauges interact with Factory Gauges",
    "extra_gauges.ponder.integer_gauge_storage.text_1": "Integer gauges are obviously meant to interact with other gauges",
    "extra_gauges.ponder.integer_gauge_storage.text_2": "When the level in storage of an item changes...",
    "extra_gauges.ponder.integer_gauge_storage.text_3": "...the integer gauge will read it!",
    "extra_gauges.ponder.integer_gauge_storage.text_4": "On the other side, an integer gauge can set a factory gauge's §atarget §aamount§r.",

    "extra_gauges.ponder.passive_gauge.header": "Using Passive Gauges to optimize Automated Recipes",
    "extra_gauges.ponder.passive_gauge.text_1": "Passive gauges work just like §9Factory §9gauges§r...",
    "extra_gauges.ponder.passive_gauge.text_2": "...but you dont need to set the §9amount §rof items to produce.",
    "extra_gauges.ponder.passive_gauge.text_3": "When sticks are missing...",
    "extra_gauges.ponder.passive_gauge.text_4": "...passive gauge will try to keep in storage just the §9right §9amount§r.",
    "extra_gauges.ponder.passive_gauge.text_5": "Once the first recipe starts crafting, the passive gauge automatically §cstops§r.",

    "extra_gauges.ponder.comparator_gauge.header": "Using Comparator Gauges to convert numbers into booleans",
    "extra_gauges.ponder.comparator_gauge.text_1": "Comparator gauges serve as bridge between §9numbers §rand §credstone §r(§con/off§r).",
    "extra_gauges.ponder.comparator_gauge.text_2": "By holding right click, we can set a constant number...",
    "extra_gauges.ponder.comparator_gauge.text_3": "...and then that number is §9compared §rwith the §9inputs §rthrough an §9operator §r(in this example §6>§r).",
    "extra_gauges.ponder.comparator_gauge.text_4": "If we input §66§r, and our constant is §98§r... well 6 is not larger than 8 so the result is §cfalse§r.",
    "extra_gauges.ponder.comparator_gauge.text_5": "Although, if we change it to §610§r, it is, and the §credstone §clink §rwill power.",

    "extra_gauges.ponder.counter_gauge.header": "Using Counter Gauges to store the amount of redstone inputs",
    "extra_gauges.ponder.counter_gauge.text_1": "A redstone link setup like this should be done for §cimmediate §cupdate §cwhen §cyou §cclick§r.",
    "extra_gauges.ponder.counter_gauge.text_2": "Counter gauges count redstone pulses cause we know you can't",
    "extra_gauges.ponder.counter_gauge.text_3": "And the amount of pulses is stored as a §9number§r.",
    "extra_gauges.ponder.counter_gauge.text_4": "By holding right click, we can change the §9counter §9threshold§r.",
    "extra_gauges.ponder.counter_gauge.text_5": "Once the threshold is reached (in this example it's 3), the counter will output §credstone §cpower§r.",
    "extra_gauges.ponder.counter_gauge.text_6": "Triggering the counter another time will reset it to 0",

    "extra_gauges.ponder.string_gauge.header": "Using String Gauges to modify text values",
    "extra_gauges.ponder.string_gauge.text_1": "String Gauges can transmit §9text §rover several wall-attached objects",
    "extra_gauges.ponder.string_gauge.text_2": "§bHello!",
    "extra_gauges.ponder.string_gauge.text_3": "When multiple inputs are present, they will be §9joined all in one text",
    "extra_gauges.ponder.string_gauge.text_4": "§eNote: §rOrder of inputs is not guaranteed to be the same",
    "extra_gauges.ponder.string_gauge.text_5": "By right clicking, you can open the §9Configuration §9screen",
    "extra_gauges.ponder.string_gauge.text_6": "Now that the §ejoin §etext §rhas been changed to §9\",\"§r, the output will change",
    "extra_gauges.ponder.string_gauge.text_7": "Text can also be processed with the other two present text boxes",
    "extra_gauges.ponder.string_gauge.text_8": "The gauge will search for §cregex §cmatches§r...",
    "extra_gauges.ponder.string_gauge.text_9": "...and replace them with the §areplacement §ainput§r.",
    "extra_gauges.ponder.string_gauge.text_10": "§cHouse §r-> §aBase",
    "extra_gauges.ponder.string_gauge_storage.header": "Making String Gauges interact with other gauges",
    "extra_gauges.ponder.string_gauge_storage.text_1": "String gauges are obviously meant to interact with other gauges",
    "extra_gauges.ponder.string_gauge_storage.text_2": "They can read item name and amount from a factory gauge...",
    "extra_gauges.ponder.string_gauge_storage.text_3": "...and write its value on the address for another gauge!",
    "extra_gauges.ponder.string_gauge_storage.text_4": "But theres more, when pointing to an §9integer §9gauge §ror a §clogic §cgauge§r...",
    "extra_gauges.ponder.string_gauge_storage.text_5": "...if the value is a number (for example §9\"12\"§r)...",
    "extra_gauges.ponder.string_gauge_storage.text_6": "...it will automatically convert it for §credstone §rand §9integer§r!",
    "extra_gauges.ponder.display_collector.header": "Using the display collector to get display sources",
    "extra_gauges.ponder.display_collector.text_1": "Display collectors can send informations to string gauges",
    "extra_gauges.ponder.display_collector.text_2": "First, right-click the source...",
    "extra_gauges.ponder.display_collector.text_3": "...then, place on our board...",
    "extra_gauges.ponder.display_collector.text_4": "...and finally connect with our string gauge.",
    "extra_gauges.ponder.display_collector.text_5": "Open the menu to start ticking",

    "extra_gauges.ponder.expanded_factory_recipes.header": "Crafting items on larger auto crafters",
    "extra_gauges.ponder.expanded_factory_recipes.text_1": "§9Extra §9gauges §rnow supports larger recipes to be crafted with factory gauges.",
    "extra_gauges.ponder.expanded_factory_recipes.text_2": "Larger auto crafter setups are obviously needed.",
    "extra_gauges.ponder.expanded_factory_recipes.text_3": "But smaller recipes can also match larger auto crafter setups, by increasing the §9width §rin the §eGUI§r.",
    "extra_gauges.ponder.expanded_factory_recipes.text_4": "Don't get scared about your setup height, as soon as it matches the minimum required for the recipe, you're good to go!",

    "create.logistics.int_selection": "选择整数值",
    "extra_gauges.gui.factory_panel.crafting_input_tip_1": "动力合成器（%s格宽）",
    "extra_gauges.gui.factory_panel.crafting_input_tip_2": "最小高度：%s格",
    "extra_gauges.gui.factory_panel.auto_crafting_input": "配方过大，无法渲染",
    "extra_gauges.gui.factory_panel.extend_width": "增加宽度（%s）",
    "extra_gauges.gui.factory_panel.reduce_width": "减少宽度（%s）",
    "extra_gauges.gui.passive_panel.no_recipe": "缺失配方"
}